name: Master Branch

on:
  push:
    branches:
      - master

env:
  CI: 1
  ARTIFACT_DIR: ./artifacts
  FORCE_COLOR: 1

jobs:
  tests:
    name: Lint, Tests and Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/detect-node
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Create artifacts directory
        run: mkdir -p ${{ env.ARTIFACT_DIR }}
      - name: Restore node modules cache
        id: node-modules-cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ env.NODE_VERSION }}-${{ env.YARN_VERSION }}-${{ hashFiles('yarn.lock') }}
      - name: Install yvm
        run: node ./scripts/install.js
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: make node_modules
      - name: Build
        run: make build-production
      - uses: cycjimmy/semantic-release-action@v2
        with:
          dry_run: true
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Tests
        run: make test-coverage
      - name: Upload Coverage Report
        run: ./.github/codecov.sh $GITHUB_EVENT_PATH
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Linting
        run: make lint
      - name: Circular Linting
        run: make lint-defend-circular
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ${{ env.ARTIFACT_DIR }}
